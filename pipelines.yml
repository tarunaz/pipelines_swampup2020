resources:
  - name: gitRepo
    type: GitRepo
    configuration:
      gitProvider: tarunm_github
      path: tarunaz/pipelines_swampup2020
      branches:
        include: master
  - name: docker_image
    type: Image
    configuration:
      registry: ArtifactoryTarun
      sourceRepository: docker
      imageName: docker.artifactory-unified.soleng-us.jfrog.team/aus_dod_docker_app_demo
      imageTag: ${run_number}
      autoPull: true
  - name: docker_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: ArtifactoryTarun
      buildName: SampleApp
      buildNumber: 1
pipelines:
  - name: aus_dod_docker_app_pipeline
    configuration:
      environmentVariables:
        readOnly:
          my_env_var: '1.0.$run_number'
          ArtIP: $(echo ${int_ArtifactoryTarun_url}|awk -F '/' '{print $3}'|awk -F ':' '{print $1}')
    steps:
      - name: bld_backend
        type: MvnBuild
        configuration:
          nodePool: MyDynamicGCPNode
          sourceLocation: java-backend-service
          mvnCommand: clean install -ntp
          configFileLocation: .
          configFileName: mvn-art-config
          inputResources:
            - name: gitRepo
              trigger: false
          integrations:
            - name: ArtifactoryTarun
          runtime:
            type: image
            image:
              auto:
                language: java
                versions:
                  - "11"
        execution:
          onStart:
            - javac -version
            - mvn --version
            - add_pipeline_variables previous_backend_ver=${my_env_var}
            - sed -ie 's/Default-Server/ArtifactoryTarun/g' $res_gitRepo_resourcePath/java-backend-service/mvn-art-config
            - sed -ie "s/1.0.0/$my_env_var/g" $res_gitRepo_resourcePath/java-backend-service/pom.xml
          onComplete:
            - echo $run_var
            - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
      - name: bld_frontend
        type: NpmBuild
        configuration:
          npmArgs: --no-progress --no-audit
          sourceLocation: npm-frontend-service
          repositoryName: npm
          inputResources:
            - name: gitRepo
              trigger: false
          integrations:
            - name: ArtifactoryTarun
        execution:
          onStart:
            - add_pipeline_variables previous_frontend_ver=${my_env_var}
            - sed -i "s/3.0.0/$my_env_var/g" $res_gitRepo_resourcePath/npm-frontend-service/package.json
      - name: publish_frontend
        type: NpmPublish
        configuration:
          repositoryName: tarun-npm-dev-local
          inputSteps:
            - name: bld_frontend
          integrations:
            - name: ArtifactoryTarun
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: fmkGroup
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: docker.${ArtIP}/ausdod_docker_app_demo
          dockerImageTag: ${run_number}
          integrations:
            - name: ArtifactoryTarun
          inputResources:
            - name: gitRepo
              trigger: false
          inputSteps:
            - name: bld_backend
            - name: publish_frontend
          outputResources:
            - name: docker_image
        execution:
          onStart:
            - sed -i "s/docker.artifactory/docker.${ArtIP}/" $res_gitRepo_resourcePath/Dockerfile
            - sed -i "s/artifactory-unified.soleng-us.jfrog.team/${ArtIP}/" $res_gitRepo_resourcePath/Dockerfile
            - sed -i "s/frontend-3.0.0/frontend-$previous_frontend_ver/g" $res_gitRepo_resourcePath/Dockerfile
            - sed -i "s/1.0.0/$previous_backend_ver/g" $res_gitRepo_resourcePath/Dockerfile
          onComplete:
            - echo $step_env_var2
            - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: fmkGroup
          targetRepository: docker
          forceXrayScan: false
          integrations:
            - name: ArtifactoryTarun
          inputSteps:
            - name: docker_build
          outputResources:
            - name: docker_image
          - name: publish_build_info
            type: PublishBuildInfo
            configuration:
              inputSteps:
                - name: docker_push
              outputResources:
                - name: docker_build_info
